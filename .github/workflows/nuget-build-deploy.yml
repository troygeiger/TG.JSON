name: NuGet Build & Deploy

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:

  build:

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: TG.JSON.sln
      Project_Name: .\src\TG.JSON\TG.JSON.csproj 
      TestProject_Name:  .\src\TG.JSON.Tests\TG.JSON.Tests.csproj
      Configuration: Release

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Execute all unit tests in the solution
    - name: Execute unit tests
      run: dotnet test -c $env:Configuration $env:TestProject_Name

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration

    # Build 
    - name: Build TG.JSON project
      run: msbuild $env:Project_Name /p:Configuration=$env:Configuration

    - name: Push to NuGet.org
      run: dotnet nuget push .\src\TG.JSON\bin\Release\TG.JSON.*.nupkg --api-key "$env:NUGET_TOKEN" --source https://api.nuget.org/v3/index.json --skip-duplicate
      env:
        NUGET_TOKEN: ${{ secrets.NUGET_KEY }}